{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.jsx","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","onAddContact","className","styles","Form","onSubmit","this","Label","Input","type","pattern","title","required","onChange","Button","Component","ListContact","contacts","onDeleteContact","List","map","contact","List_item","List_button","onClick","id","useStyles","createUseStyles","display","marginBottom","width","fontSize","color","cursor","font","marginTop","borderRadius","border","outline","boxShadow","Filter","onChangeFilter","classes","defaultProps","App","filter","addContact","includes","alert","uuidv4","prevState","changeFilter","getVisibleContacts","toLowerCase","deleteContact","contactId","visibleContacts","console","log","length","ContactList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88127b13.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ContactList_List__3AHRz\",\"List_item\":\"ContactList_List_item__1XRpW\",\"List_button\":\"ContactList_List_button__NrbU7\"};","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    this.props.onAddContact({ ...this.state });\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n        <form className={styles.Form} onSubmit={this.handleSubmit}>\r\n          <label className={styles.Label}>\r\n            Name\r\n            <input\r\n                className={styles.Input}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n                value={this.state.name}\r\n                onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label className={styles.Label}>\r\n            Number\r\n            <input\r\n                className={styles.Input}\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n                title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n                required\r\n                value={this.state.number}\r\n                onChange={this.handleChange}\r\n            />\r\n          </label>\r\n            <button className={styles.Button} type=\"submit\">\r\n              Add contact\r\n            </button>\r\n        </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n\r\n\r\n\r\n","\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ListContact = ({ contacts, onDeleteContact }) => (\r\n  <ul className={styles.List}>\r\n    {contacts.map((contact) => (\r\n      <li className = {styles.List_item} key={contact.id}>\r\n        {\"• \" + contact.name + \":  \" + contact.number}\r\n        {\r\n          <button\r\n            className={styles.List_button}\r\n            type=\"button\"\r\n            name=\"delete\"\r\n            onClick={() => onDeleteContact(contact.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        }\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nListContact.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n  })),\r\n}\r\nexport default ListContact;\r\n","\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  Label:{\r\n    display: 'inline-block',\r\n    marginBottom: 16,\r\n    width: 200,\r\n    fontSize: 16,\r\n    color: '#171718',\r\n    cursor: 'pointer',\r\n    }, \r\n         \r\n  Input: {\r\n    color: '#171718',\r\n    font: 'inherit',\r\n    fontSize: '0.9rem',\r\n    marginTop: 6,\r\n    borderRadius: 4,\r\n    border: '1px solid #9e9d9d',\r\n    width: 200,\r\n    outline: 0,\r\n    '&:focus': {\r\n    border: '2px solid blue',\r\n    boxShadow: '1px 1px 3px 1px rgba(41, 107, 250, 0.14)',\r\n    },\r\n  }\r\n});\r\n\r\n\r\n// Приймаємо Подію з поля фільтра    в props: value і onChangeFilter            const Filter = ({ value, onChangeFilter }) => { \r\nfunction Filter({ value, onChangeFilter }) {      \r\n  const classes = useStyles();\r\n    \r\n  return (\r\n    <div className = {classes.Label}>\r\n      Find contacts by name\r\n      <input className = {classes.Input}\r\n             type=\"text\"\r\n             value={value}\r\n             onChange={onChangeFilter}\r\n             name=\"filter\"                                     //і'мя inputa\r\n             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n             title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n             required\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.defaultProps = {\r\n  value: '',\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onchangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport { v4 as uuidv4 } from \"uuid\";\nimport './styles.css';\n\nclass App extends Component {\n\tstate = {\n    contacts: [\n        {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n        {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n        {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n        {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n      ],\n       filter: \"\",\n  };\n\n\n  addContact = (contacts) => {\n    const searchName = this.state.contacts\n      .map((contact) => contact.name)\n      .includes(contacts.name);    //значение true или false\n       \n    if (searchName) {\n      alert(`${contacts.name} is already in contacts`);\n      } else {\n      const contact = {\n        ...contacts,\n        id: uuidv4(),\n      };\n      \n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n\n  // Подію на полі фільтра  пишемо в стейт\n  changeFilter = (event) => {                              \n    this.setState({ filter: event.target.value }); \n  };\n\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts(); //(5) [{…}, {…}, {…}, {…}, {…}]\n      console.log('visibleContacts', visibleContacts, 'visibleContacts.length',visibleContacts.length) \n    return (\n        <div>\n          <h1>Phonebook</h1>\n\n          <ContactForm onAddContact={this.addContact} />\n          <h2>Contacts</h2>\n        \n          {/* {visibleContacts.length > 0 && (    ***знято!!! если искать по сочетанию букв по которому нет совпадений - пропадает инпут.  */} \n            <Filter value={filter} onChangeFilter={this.changeFilter} />\n          {/* )}           */}\n            <ContactList\n              contacts={visibleContacts}\n              onDeleteContact={this.deleteContact}\n            />\n          \n        </div>\n    );\n  };\n}\n\nexport default App;\n\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css'; // npm install modern-normalize\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__17-Pb\",\"Label\":\"ContactForm_Label__UvACl\",\"Input\":\"ContactForm_Input__2hJCZ\",\"Button\":\"ContactForm_Button__tSfOZ\"};"],"sourceRoot":""}